
//#include <stdio.h>
//#include <algorithm>
//using namespace std;
//
//int main()
//{
//	int n;
//	scanf("%d",&n);
//	
//	int a[n+1];
//	
//	for(int i = 0;i < n;i++)
//	{
//		scanf("%d",&a[i]);
//	}
//	
//	int max = 0;
//	int max_n = 0;
//	int cnt[n+1];
//	
//	sort(a,a+n);
//	
//	for(int i = 0;i<n;i++)
//	{
//		int j;
//		for(j = 0;a[i] == a[i-1];cnt[j]++)
//		{
//			j++;
//		}
//		
//		if(cnt[j] > max)
//		{
//			max = cnt[j];
//			max_n = a[j+1];
//		}
//	}
//	
//	printf("%d",max_n);
//}

//#include <stdio.h>
//#include <algorithm>
//
//using namespace std;
//
//struct student {
//	int country;
//	int number;
//	int score;
//};
//
//bool cmp(student left,student right)
//{
//	return left.score > right.score;
//}
//
//int main()
//{
//	int n;
//	scanf("%d",&n);
//	
//	student s[n+1];
//	
//	for(int i = 0;i < n;i++)
//	{
//		scanf("%d %d %d",&s[i].country,&s[i].number,&s[i].score);
//	}
//	
//	sort(s,s+n,cmp);
//	
//	
//	
//}

#include <stdio.h>
#include <map>
#include <utility>
#include <algorithm>
using namespace std;

struct student{
	int country;
	int number;
	int score;
};

bool cmp(student left.score, student right.score)
{
	return left.score > right.score;
}

int main()
{
	int n;
	scanf("%d",&n);
	
	student s[n+1];
	map <int,pair> m[n+1];
	pair<int,int> p[n+1];
	
	
	for(int i = 0;i < n;i++)
	{
		scanf("%d %d %d",&s[i].country,&s[i].number,&s[i].score);
		p[i] = make_pair(s[i].country,s[i].number);
		m[i].insert(make_pair(s[i].score,p[i]));
	}
	
	sort(s,s+n,cmp);
	
	for(int i = 0;i < 3;i++)
	{
		printf("%d %d",m.find(s[0].score) -> first,m.find(s[0].score) -> second);
	}
	
	
	
}
